#!/usr/bin/env ruby
require 'rubygems'
require 'thor'
require 'yaesu'
require 'msgpack'


module Yaesu
    class Cli < Thor
        desc "log", "Last 10 transmissions"
        def log(on)
            data = Ost[on].items.first(10)
            if data.count > 0
                puts ""
                puts "last 10 of #{Ost[on].items.count} messages on #{on}\n"
                puts ""
                Ost[on].items.first(10).reverse.each do |data|
                    o = OpenStruct.new(MessagePack.unpack(data))
                    puts ">> #{o.payload}"
                end
                puts ""
            end
        end
        desc "transmit ON DATA", "Transmit ON DATA"
        def transmit(on,event,data)
            Yaesu.transmit on: on, data: data
        end
        desc "reset CHANNEL", "reset CHANNEL"
        def reset(channel)
            Ost[channel].redis.call("DEL",Ost[channel].key)
        end
    end
end

Yaesu::Cli.start(ARGV)